===========================
Basic Arithmetic Operations
===========================

var sum = 5 + 3;
var diff = 10 - 4;
var product = 2 * 8;
var quotient = 20 / 4;

---

(source_file
    (assignment
    (identifier)
    (binary_expression
        (int)
        (arithmetic_operator)
        (int)))
    (assignment
    (identifier)
    (binary_expression
        (int)
        (arithmetic_operator)
        (int)))
    (assignment
    (identifier)
    (binary_expression
        (int)
        (arithmetic_operator)
        (int)))
    (assignment
    (identifier)
    (binary_expression
        (int)
        (arithmetic_operator)
        (int))))

===================
Boolean Comparisons
===================

var check = x == y;
var notEqual = a != b;
var greater = 10 > 5;
var lessOrEqual = 3 <= 7;


---

(source_file
    (assignment
    (identifier)
    (comparison_expression
        (identifier)
        (comparison_operator)
        (identifier)))
    (assignment
    (identifier)
    (comparison_expression
        (identifier)
        (comparison_operator)
        (identifier)))
    (assignment
    (identifier)
    (comparison_expression
        (int)
        (comparison_operator)
        (int)))
    (assignment
    (identifier)
    (comparison_expression
        (int)
        (comparison_operator)
        (int))))

================================
Bitwise Operators in Expressions
================================

var bitwiseAnd = x & y;
var bitwiseOr = a | b;
var bitwiseXor = 10 ^ 3;

---

(source_file
    (assignment
    (identifier)
    (binary_expression
        (identifier)
        (bitwise_operator)
        (identifier)))
    (assignment
    (identifier)
    (binary_expression
        (identifier)
        (bitwise_operator)
        (identifier)))
    (assignment
    (identifier)
    (binary_expression
        (int)
        (bitwise_operator)
        (int))))

================================
Chained Arithmetic Expressions
================================

var chain = 2 + 3 * 4 - 5 / 2;

---

(source_file
    (assignment
    (identifier)
    (binary_expression
        (binary_expression
        (binary_expression
            (binary_expression
            (int)
            (arithmetic_operator)
            (int))
            (arithmetic_operator)
            (int))
        (arithmetic_operator)
        (int))
        (arithmetic_operator)
        (int))))

==================================
Mixed Expressions with Parentheses
==================================

var complex = (5 + 3) * 2;
var nested = (x > y) && (y < z);

---

(source_file
    (assignment
    (identifier)
    (binary_expression
        (parenthesized_expression
        (binary_expression
            (int)
            (arithmetic_operator)
            (int)))
        (arithmetic_operator)
        (int)))
    (assignment
    (identifier)
    (binary_expression
        (parenthesized_expression
        (comparison_expression
            (identifier)
            (comparison_operator)
            (identifier)))
        (logical_operator)
        (parenthesized_expression
        (comparison_expression
            (identifier)
            (comparison_operator)
            (identifier))))))

================================
Using Identifiers in Expressions
================================

var result = a + b - c;
var logic = flag1 || flag2;

---

(source_file
    (assignment
    (identifier)
    (binary_expression
        (binary_expression
        (identifier)
        (arithmetic_operator)
        (identifier))
        (arithmetic_operator)
        (identifier)))
    (assignment
    (identifier)
    (binary_expression
        (identifier)
        (logical_operator)
        (identifier))))

=================================
Function Calls Inside Expressions
=================================

var calculated = add(5, 3) * multiply(2, 4);

---

(source_file
    (assignment
    (identifier)
    (binary_expression
        (function_call
        (identifier)
        (argument_list
            (int)
            (int)))
        (arithmetic_operator)
        (function_call
        (identifier)
        (argument_list
            (int)
            (int))))))

=============================
Binary Operations with Arrays
=============================

var element = arr[2] * 10;

---

(source_file
    (assignment
    (identifier)
    (binary_expression
        (array_access
        (identifier)
        (int))
        (arithmetic_operator)
        (int))))

=========================
Nested Binary Expressions
=========================

var result = (5 + 3) * (2 - 1);
var logic = (flag1 && flag2) || !flag3;

---

(source_file
    (assignment
    (identifier)
    (binary_expression
        (parenthesized_expression
        (binary_expression
            (int)
            (arithmetic_operator)
            (int)))
        (arithmetic_operator)
        (parenthesized_expression
        (binary_expression
            (int)
            (arithmetic_operator)
            (int)))))
    (assignment
    (identifier)
    (binary_expression
        (parenthesized_expression
        (binary_expression
            (identifier)
            (logical_operator)
            (identifier)))
        (logical_operator)
        (unary_expression
        (unary_operator)
        (identifier)))))

============================
Expressions with Postfix Ops
============================

var modified = count++ * 2;

---

(source_file
    (assignment
    (identifier)
    (binary_expression
        (postfix_expression
        (identifier))
        (arithmetic_operator)
        (int))))



